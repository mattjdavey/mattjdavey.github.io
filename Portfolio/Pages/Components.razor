@page "/components"

<PageTitle>Components</PageTitle>

<div class="fixed top-5 right-5 z-50 space-y-2">
    @foreach (var alert in _alerts)
    {
        <div class="p-4 rounded-lg shadow-lg text-white transition-all duration-500 ease-in-out transform overflow-hidden relative @(alert.IsVisible ? "translate-x-0 opacity-100 scale-100 animate-bounce-in" : "translate-x-full opacity-0 scale-0") @GetAlertClass(alert.Type)">
            <div class="absolute inset-0 bg-gradient-to-r from-white/10 via-white/20 to-transparent opacity-50 animate-shimmer"></div>
            <div class="flex justify-between items-center z-10">
                <span>@alert.Message</span>
            </div>
        </div>
    }
</div>

<button class="rounded-md shadow-md bg-gray-800 p-5 text-white hover:bg-gray-700" @onclick="() => ShowAlert(AlertMessage, AlertType)">
    Show Success Alert
</button>

@code {
    private readonly List<Alert> _alerts = [];
    private const string AlertMessage = "Upload Successful";
    private const string AlertType = "Success";

    private async Task ShowAlert(string message, string type)
    {
        var alert = new Alert
        {
            Message = message,
            Type = type,
            IsVisible = true
        };

        _alerts.Add(alert);
        await DismissAfterDelay(alert);
        
    }

    private async Task DismissAfterDelay(Alert alert)
    {
        await Task.Delay(3500);
        DismissAlert(alert);
    }

    private void DismissAlert(Alert alert)
    {
        alert.IsVisible = false;
        StateHasChanged();

        Task.Delay(300).ContinueWith(_ =>
        {
            _alerts.Remove(alert);
            StateHasChanged();
        });
    }

    private string GetAlertClass(string type)
    {
        return type switch
        {
            "Success" => "bg-indigo-500",
            "Error" => "bg-red-500",
            "Warning" => "bg-yellow-500",
            _ => "bg-gray-500"
        };
    }

    private class Alert
    {
        public string Message { get; set; }
        public string Type { get; set; }
        public bool IsVisible { get; set; }
    }
}